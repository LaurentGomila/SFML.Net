<Project Sdk="Microsoft.NET.Sdk">
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <AssemblyTitle>SFML</AssemblyTitle>
    <VersionPrefix>2.4.0</VersionPrefix>
  </PropertyGroup>
  <PropertyGroup>
    <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x86'">
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <OutputPath>..\..\lib\debug\x86\</OutputPath>
    <DocumentationFile>..\..\doc\build\sfmlnet-system-2.xml</DocumentationFile>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x86'">
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <OutputPath>..\..\lib\release\x86\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <OutputPath>..\..\lib\debug\x64\</OutputPath>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <AllowUnsafeBlocks>True</AllowUnsafeBlocks>
    <OutputPath>..\..\lib\release\x64\</OutputPath>
  </PropertyGroup>
  
  <!-- Following is OS/Target detection -->

  <!-- OS Detection default Value  -->
  <PropertyGroup>
    <IsWindows>False</IsWindows>
    <IsOSX>False</IsOSX>
    <IsAndroid>False</IsAndroid>
    <IsLinux>False</IsLinux>
  </PropertyGroup>

  <!-- Check if we target Windows -->
  <PropertyGroup Condition="($(RuntimeIdentifier.StartsWith('win')) And !$(RuntimeIdentifier.Equals('')) ) Or ( $(OS.Equals('Windows_NT')) And $(RuntimeIdentifier.Equals('')) ) ">
    <!--Replacing '-' and '.' by '_' in Constants because we cannot use those characters in the source files -->
    <DefineConstants>_WINDOWS_, $(RuntimeIdentifier.Replace("-","_").Replace(".","_"))</DefineConstants>
    <IsWindows>True</IsWindows>
  </PropertyGroup>

  <!-- Check if we target OSX -->
  <PropertyGroup Condition="($(RuntimeIdentifier.StartsWith('osx')) And !$(RuntimeIdentifier.Equals('')) ) Or ( $([System.Runtime.InteropServices.RuntimeInformation]::IsOSPlatform($([System.Runtime.InteropServices.OSPlatform]::OSX))) And $(RuntimeIdentifier.Equals('')) ) ">
    <!--Replacing '-' and '.' by '_' in Constants because we cannot use those characters in the source files -->
    <DefineConstants>_OSX_, $(RuntimeIdentifier.Replace("-","_").Replace(".","_"))</DefineConstants>
    <IsOSX>True</IsOSX>
  </PropertyGroup>

  <!-- Check if we target Android (Doesn't Detect properly for now but is Official: https://docs.microsoft.com/en-us/dotnet/core/rid-catalog) -->
  <!-- (Less check to do because we consider we cannot Dev on Android and anyway there<s no way to detect an Android Platform other then the RID) -->
  <PropertyGroup Condition="$(RuntimeIdentifier.StartsWith('android')) ">
    <!--Replacing '-' and '.' by '_' in Constants because we cannot use those characters in the source files -->
    <DefineConstants>_ANDROID_, $(RuntimeIdentifier.Replace("-","_").Replace(".","_"))</DefineConstants>
    <IsAndroid>True</IsAndroid>
  </PropertyGroup>

  <!-- Check if we target Linux (To many name to check, instead we check if not one of the other OS) -->
  <PropertyGroup Condition=" !$(IsWindows) And !$(IsOSX) And !$(IsAndroid)">
    <!--Replacing '-' and '.' by '_' in Constants because we cannot use those characters in the source files -->
    <DefineConstants>_LINUX_, $(RuntimeIdentifier.Replace("-","_").Replace(".","_"))</DefineConstants>
    <IsLinux>True</IsLinux>
  </PropertyGroup>
 
  
</Project>